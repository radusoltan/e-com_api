# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\JWTAuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }
    # Register refresh token cleanup command
    App\Command\CleanupRefreshTokensCommand:
        arguments:
            $refreshTokenService: '@App\Service\RefreshTokenService'
        tags: [ 'console.command' ]
    login.rate_limiter:
        class: Symfony\Component\RateLimiter\RateLimiterFactory
        arguments:
            $config:
                policy: 'token_bucket'
                limit: 5
                rate:
                    interval: '5 minutes'
            $storage: '@rate_limiter.storage.cache_storage'
    register.rate_limiter:
        class: Symfony\Component\RateLimiter\RateLimiterFactory
        arguments:
            $config:
                policy: 'token_bucket'
                limit: 3
                rate:
                    interval: '15 minutes'
            $storage: '@rate_limiter.storage.cache_storage'
    token_refresh.rate_limiter:
        class: Symfony\Component\RateLimiter\RateLimiterFactory
        arguments:
            $config:
                policy: 'token_bucket'
                limit: 10
                rate:
                    interval: '10 minutes'
            $storage: '@rate_limiter.storage.cache_storage'
    api.rate_limiter:
        class: Symfony\Component\RateLimiter\RateLimiterFactory
        arguments:
            $config:
                policy: 'sliding_window'
                limit: 60
                interval: '1 minute'
            $storage: '@rate_limiter.storage.cache_storage'
    # Rate Limiter Listener
    App\EventListener\RateLimitListener:
        arguments:
            $loginLimiter: '@login.rate_limiter'
            $registerLimiter: '@register.rate_limiter'
            $tokenRefreshLimiter: '@token_refresh.rate_limiter'
            $apiLimiter: '@api.rate_limiter'
        tags:
            - { name: kernel.event_subscriber }